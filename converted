apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o converted
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: configservice
      name: configservice
    spec:
      ports:
        - name: "5000"
          port: 5000
          targetPort: 5000
      selector:
        io.kompose.service: configservice
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o converted
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      ports:
        - name: "3306"
          port: 3306
          targetPort: 3306
      selector:
        io.kompose.service: db
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o converted
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: web
      name: web
    spec:
      ports:
        - name: "8000"
          port: 8000
          targetPort: 8000
      selector:
        io.kompose.service: web
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o converted
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: configservice
      name: configservice
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: configservice
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o converted
            kompose.version: 1.22.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.network/stock-ml-network-intern: "true"
            io.kompose.service: configservice
        spec:
          containers:
            - image: configservice
              name: configservice
              ports:
                - containerPort: 5000
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: stock-ml-network-intern
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/stock-ml-network-intern: "true"
      podSelector:
        matchLabels:
          io.kompose.network/stock-ml-network-intern: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o converted
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: data
      name: data
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: data
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o converted
            kompose.version: 1.22.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.network/stock-ml-network-intern: "true"
            io.kompose.service: data
        spec:
          containers:
            - image: data
              name: data
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o converted
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: db
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o converted
            kompose.version: 1.22.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.network/stock-ml-network-intern: "true"
            io.kompose.service: db
        spec:
          containers:
            - args:
                - --init-file
                - /docker-entrypoint-initdb.d/init.sql
              env:
                - name: MYSQL_ROOT_PASSWORD
                  value: password
              image: mysql
              name: db
              ports:
                - containerPort: 3306
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/mysql
                  name: db-data
                - mountPath: /docker-entrypoint-initdb.d/init.sql
                  name: db-claim1
          restartPolicy: Always
          volumes:
            - name: db-data
              persistentVolumeClaim:
                claimName: db-data
            - name: db-claim1
              persistentVolumeClaim:
                claimName: db-claim1
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-data
      name: db-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-claim1
      name: db-claim1
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o converted
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: web
      name: web
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: web
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o converted
            kompose.version: 1.22.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.network/stock-ml-network-intern: "true"
            io.kompose.service: web
        spec:
          containers:
            - image: web
              name: web
              ports:
                - containerPort: 8000
              resources: {}
              volumeMounts:
                - mountPath: /app/db.sqlite3
                  name: web-claim0
          restartPolicy: Always
          volumes:
            - name: web-claim0
              persistentVolumeClaim:
                claimName: web-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web-claim0
      name: web-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
kind: List
metadata: {}

